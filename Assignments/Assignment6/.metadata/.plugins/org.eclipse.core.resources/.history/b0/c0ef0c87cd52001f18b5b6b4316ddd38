/*
 * main.c
 *
 *  Created on: Aug 5, 2024
 *      Author: Mohamed Newir
 */
/*STD LIBRARIES*/
#include <stdio.h>
#include <stdlib.h>
/*structure deceleration*/
struct node{
	int data;
	struct node *next;
};
/*global variables*/
struct node *head =NULL;
/*function prototypes*/
void insertAtFirst(int);
void insertAtLast(int);
void printList(void);
void updateList(int,int);
void deleteList(int);
int findListSize(void);
int findDataPos(int);
/*main function*/
int main(int argc,char**argv){

	return 0;
}
/*functions definition*/
void insertAtFirst(int data){
	struct node *link =(struct node*)malloc(sizeof(struct node));
	link->data = data;
	link->next = head;
	head = link;
}
void insertAtLast(int data){
	struct node *link =(struct node*)malloc(sizeof(struct node));
	struct node *current = NULL;
	link->data = data;
	link->next = NULL;

	if(head == NULL){
		head = link;
		return;
	}
	current = head;
	while(current->next == NULL){
		current = current->next;
	}
	current->next = link;
}
void printList(void){
	struct node *current = NULL;
	if(head == NULL){
		printf("list is empty\n");
		return;
	}
	current = head;
	while(current != NULL){
		printf("%d =>\t",current->data);
		current = current->next;
	}
}
void updateList(int new,int old){
	int pos = 0;
	struct node *current = NULL;
	if(head == NULL){
		printf("list is empty");
		return;
	}
	current = head;
	while(current != NULL){
		if(current->data == old){
			current->data = new;
			return;
		}
		current = current->next;
	}

}
void deleteList(int);
int findListSize(void);
int findDataPos(int);
